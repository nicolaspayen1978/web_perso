 Refactor: Backend vs Frontend Responsibilities

This checklist helps streamline logic, reduce duplication, and align chat + enrichment flow.

‚∏ª

‚úÖ Backend
	‚Ä¢	Move token truncation logic to backend
Shift truncateChatHistory() from chatbot.js into api/chatbot.js to centralize prompt control.
	‚Ä¢	Add /api/debug-match?query= endpoint
Returns getRelevantResources(..., { debug: true }) with title, url, score, and reasons[].
üîê Protect with BACKOFFICE_PASSWORD.
	‚Ä¢	(Optional) Include matchedUrls in /api/chatbot response
Helps surface relevant links or articles directly in frontend UI.

‚∏ª

üñ•Ô∏è Frontend
	‚Ä¢	Remove frontend-side prompt trimming
Let backend handle context sizing for OpenAI token safety.
	‚Ä¢	(Optional) Load chat history from backend
On startup, use /api/conversation/[visitorID] to prefill messages.
Enables cross-tab history + persistence across reloads.

‚∏ª

üóÇÔ∏è Infra / Data
	‚Ä¢	Ignore resourcesContent.enriched.json in dev .gitignore
Prevents accidentally pushing large, AI-enriched content to GitHub.
	‚Ä¢	Support resourcesContent.dev.json (optional)
Provide smaller local/dev version to reduce token usage on preview builds.